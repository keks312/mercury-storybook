"use strict";
self["webpackHotUpdatemercury_storybook"]("DesignTokensDisplay-stories",{

/***/ "./stories/DesignTokensDisplay.jsx":
/*!*****************************************!*\
  !*** ./stories/DesignTokensDisplay.jsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _merged_colors_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./merged-colors.json */ "./stories/merged-colors.json");
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");




const tokens = _merged_colors_json__WEBPACK_IMPORTED_MODULE_1__.color.t1;
const DesignTokensDisplay = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [filteredTokens, setFilteredTokens] = useState(_merged_colors_json__WEBPACK_IMPORTED_MODULE_1__.color.t1);
  const handleSearch = e => {
    const {
      value
    } = e.target;
    setSearchQuery(value);

    // Filter tokens based on the search query
    const filtered = Object.keys(_merged_colors_json__WEBPACK_IMPORTED_MODULE_1__.color.t1).reduce((acc, tokenName) => {
      if (tokenName.toLowerCase().includes(value.toLowerCase())) {
        acc[tokenName] = _merged_colors_json__WEBPACK_IMPORTED_MODULE_1__.color.t1[tokenName];
      }
      return acc;
    }, {});
    setFilteredTokens(filtered);
  };
  const copyToClipboard = value => {
    // Create a temporary textarea element to copy the value to the clipboard
    const tempTextArea = document.createElement('textarea');
    tempTextArea.value = value;

    // Append the textarea to the DOM
    document.body.appendChild(tempTextArea);

    // Select the textarea and copy the value to the clipboard
    tempTextArea.select();
    document.execCommand('copy');

    // Remove the textarea from the DOM
    document.body.removeChild(tempTextArea);

    // Optionally, provide visual feedback to the user
    alert(`Copied: ${value}`);
  };
  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div", {
    children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("h2", {
      children: "Color Tokens"
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input", {
      type: "text",
      placeholder: "Search tokens...",
      value: searchQuery,
      onChange: handleSearch,
      style: {
        marginBottom: '10px'
      }
    }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("table", {
      style: {
        width: '100%',
        borderCollapse: 'collapse',
        marginTop: '10px'
      },
      children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("thead", {
        children: /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("tr", {
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("th", {
            children: "Token Name"
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("th", {
            children: "Light Value"
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("th", {
            children: "Dark Value"
          })]
        })
      }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("tbody", {
        children: Object.entries(tokens).map(([tokenName, tokenData]) => /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("tr", {
          children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("td", {
            style: {
              border: '1px solid #ddd',
              padding: '8px'
            },
            children: tokenName
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("td", {
            style: {
              border: '1px solid #ddd',
              padding: '8px'
            },
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div", {
              className: "textColor light",
              onClick: () => copyToClipboard(tokenData.value),
              children: tokenData.value
            }), " ", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div", {
              className: "preview light",
              style: {
                backgroundColor: tokenData.value
              }
            })]
          }), /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("td", {
            style: {
              border: '1px solid #ddd',
              padding: '8px'
            },
            children: [/*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div", {
              className: "textColor dark",
              onClick: () => copyToClipboard(tokenData.darkValue),
              children: [" ", tokenData.darkValue]
            }), " ", /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div", {
              className: "preview dark",
              style: {
                backgroundColor: tokenData.darkValue
              }
            })]
          })]
        }, tokenName))
      })]
    })]
  });
};
DesignTokensDisplay.displayName = "DesignTokensDisplay";
DesignTokensDisplay.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "DesignTokensDisplay"
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DesignTokensDisplay);

/***/ })

});
//# sourceMappingURL=DesignTokensDisplay-stories.de20e9596e6f9b5468f3.hot-update.js.map