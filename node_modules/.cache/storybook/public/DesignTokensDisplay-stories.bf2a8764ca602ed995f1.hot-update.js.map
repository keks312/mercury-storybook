{"version":3,"file":"DesignTokensDisplay-stories.bf2a8764ca602ed995f1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAGA;AA7JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgKA","sources":["webpack://mercury-storybook/./stories/DesignTokensDisplay.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport colorTokens from './merged-colors.json';\n\nconst tokens = colorTokens.color.t1;\n\nconst DesignTokensDisplay = () => {\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredTokens, setFilteredTokens] = useState(colorTokens.color.t1);\n  const [activeTab, setActiveTab] = useState('hex-6'); // Default active tab\n\n  const handleSearch = (e) => {\n      const { value } = e.target;\n      setSearchQuery(value);\n\n      // Filter tokens based on the search query\n      const filtered = Object.keys(colorTokens.color.t1).reduce((acc, tokenName) => {\n        if (tokenName.toLowerCase().includes(value.toLowerCase())) {\n          acc[tokenName] = colorTokens.color.t1[tokenName];\n        }\n        return acc;\n      }, {});\n\n      setFilteredTokens(filtered);\n  };\n\n  const copyToClipboard = (value) => {\n    // Create a temporary textarea element to copy the value to the clipboard\n    const tempTextArea = document.createElement('textarea');\n    tempTextArea.value = value;\n\n    // Append the textarea to the DOM\n    document.body.appendChild(tempTextArea);\n\n    // Select the textarea and copy the value to the clipboard\n    tempTextArea.select();\n    document.execCommand('copy');\n\n    // Remove the textarea from the DOM\n    document.body.removeChild(tempTextArea);\n\n    // Optionally, provide visual feedback to the user\n    alert(`Copied: ${value}`);\n  };\n\n  const changeTab = (tab) => {\n    setActiveTab(tab);\n    // Depending on the structure of your colorTokens, you may need to update filteredTokens here\n  };\n\n  return (\n    <div>\n      <h2>Color Tokens</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Search tokens...\"\n        value={searchQuery}\n        onChange={handleSearch}\n        style={{ marginBottom: '10px' }}\n      />\n\n      <div class=\"tabsContainer\">\n        <button onClick={() => changeTab('rgba-8')} className={activeTab === 'rgba-8' ? 'active' : ''}>\n          iOS (RGBA)\n        </button>\n        <button onClick={() => changeTab('argb-8')} className={activeTab === 'argb-8' ? 'active' : ''}>\n          Android (ARGB)\n        </button>\n        <button onClick={() => changeTab('srgba')} className={activeTab === 'srgba' ? 'active' : ''}>\n          iOS (sRGBA)\n        </button>\n      </div>\n\n      <table style={{ width: '100%', borderCollapse: 'collapse', marginTop: '10px' }}>\n        <thead>\n          <tr>\n            <th>Token Name</th>\n            <th>Light Value</th>\n            <th>Dark Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.entries(filteredTokens).map(([tokenName, tokenData]) => (\n            <tr key={tokenName}>\n              <td style={{ border: '1px solid #ddd', padding: '8px' }}>\n                <div className=\"textColor\" onClick={() => copyToClipboard(tokenName)}>\n                  {tokenName} <span><svg viewBox=\"0 0 20 20\" class=\"Icon_Icon__Dm3QW\" style={{width:'14px',height: '14px'}}><path fill-rule=\"evenodd\" d=\"M6.515 4.75a2 2 0 0 1 1.985-1.75h3a2 2 0 0 1 1.985 1.75h.265a2.25 2.25 0 0 1 2.25 2.25v7.75a2.25 2.25 0 0 1-2.25 2.25h-7.5a2.25 2.25 0 0 1-2.25-2.25v-7.75a2.25 2.25 0 0 1 2.25-2.25h.265Zm1.985-.25h3a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5Zm-1.987 1.73.002.02h-.265a.75.75 0 0 0-.75.75v7.75c0 .414.336.75.75.75h7.5a.75.75 0 0 0 .75-.75v-7.75a.75.75 0 0 0-.75-.75h-.265a2 2 0 0 1-1.985 1.75h-3a2 2 0 0 1-1.987-1.77Z\"></path></svg></span>\n                </div>\n              </td>\n\n              {activeTab === 'rgba-8' && (\n                <>\n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>\n                    <div className=\"previewContainer\">\n                      <div className=\"preview light\" style={{ backgroundColor: tokenData.value }}></div>\n                      <div className=\"textColor light\" onClick={() => copyToClipboard(tokenData.value)}>\n                        {tokenData.value} <span><svg viewBox=\"0 0 20 20\" class=\"Icon_Icon__Dm3QW\" style={{width:'14px',height: '14px'}}><path fill-rule=\"evenodd\" d=\"M6.515 4.75a2 2 0 0 1 1.985-1.75h3a2 2 0 0 1 1.985 1.75h.265a2.25 2.25 0 0 1 2.25 2.25v7.75a2.25 2.25 0 0 1-2.25 2.25h-7.5a2.25 2.25 0 0 1-2.25-2.25v-7.75a2.25 2.25 0 0 1 2.25-2.25h.265Zm1.985-.25h3a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5Zm-1.987 1.73.002.02h-.265a.75.75 0 0 0-.75.75v7.75c0 .414.336.75.75.75h7.5a.75.75 0 0 0 .75-.75v-7.75a.75.75 0 0 0-.75-.75h-.265a2 2 0 0 1-1.985 1.75h-3a2 2 0 0 1-1.987-1.77Z\"></path></svg></span>\n                      </div>\n                    </div>\n                  </td>\n                  \n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>\n                    <div className=\"previewContainer\">\n                      <div className=\"preview dark\" style={{ backgroundColor: tokenData.darkValue }}></div>\n                      <div className=\"textColor dark\" onClick={() => copyToClipboard(tokenData.darkValue)}> \n                      {tokenData.darkValue}<span><svg viewBox=\"0 0 20 20\" class=\"Icon_Icon__Dm3QW\" style={{width:'14px',height: '14px'}}><path fill-rule=\"evenodd\" d=\"M6.515 4.75a2 2 0 0 1 1.985-1.75h3a2 2 0 0 1 1.985 1.75h.265a2.25 2.25 0 0 1 2.25 2.25v7.75a2.25 2.25 0 0 1-2.25 2.25h-7.5a2.25 2.25 0 0 1-2.25-2.25v-7.75a2.25 2.25 0 0 1 2.25-2.25h.265Zm1.985-.25h3a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5Zm-1.987 1.73.002.02h-.265a.75.75 0 0 0-.75.75v7.75c0 .414.336.75.75.75h7.5a.75.75 0 0 0 .75-.75v-7.75a.75.75 0 0 0-.75-.75h-.265a2 2 0 0 1-1.985 1.75h-3a2 2 0 0 1-1.987-1.77Z\"></path></svg></span>\n                      </div>\n                    </div>\n                    </td>\n                </>\n              )}\n\n              {activeTab === 'argb-8' && (\n                <>\n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>\n                    <div className=\"previewContainer\">\n                      <div className=\"preview light\" style={{ backgroundColor: tokenData.value }}></div>\n                      <div className=\"textColor light\" onClick={() => copyToClipboard(tokenData.value)}>\n                        {tokenData.value} <span><svg viewBox=\"0 0 20 20\" class=\"Icon_Icon__Dm3QW\" style={{width:'14px',height: '14px'}}><path fill-rule=\"evenodd\" d=\"M6.515 4.75a2 2 0 0 1 1.985-1.75h3a2 2 0 0 1 1.985 1.75h.265a2.25 2.25 0 0 1 2.25 2.25v7.75a2.25 2.25 0 0 1-2.25 2.25h-7.5a2.25 2.25 0 0 1-2.25-2.25v-7.75a2.25 2.25 0 0 1 2.25-2.25h.265Zm1.985-.25h3a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5Zm-1.987 1.73.002.02h-.265a.75.75 0 0 0-.75.75v7.75c0 .414.336.75.75.75h7.5a.75.75 0 0 0 .75-.75v-7.75a.75.75 0 0 0-.75-.75h-.265a2 2 0 0 1-1.985 1.75h-3a2 2 0 0 1-1.987-1.77Z\"></path></svg></span>\n                      </div>\n                    </div>\n                  </td>\n                  \n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>\n                    <div className=\"previewContainer\">\n                      <div className=\"preview dark\" style={{ backgroundColor: tokenData.darkValue }}></div>\n                      <div className=\"textColor dark\" onClick={() => copyToClipboard(tokenData.darkValue)}> \n                      {tokenData.darkValue}<span><svg viewBox=\"0 0 20 20\" class=\"Icon_Icon__Dm3QW\" style={{width:'14px',height: '14px'}}><path fill-rule=\"evenodd\" d=\"M6.515 4.75a2 2 0 0 1 1.985-1.75h3a2 2 0 0 1 1.985 1.75h.265a2.25 2.25 0 0 1 2.25 2.25v7.75a2.25 2.25 0 0 1-2.25 2.25h-7.5a2.25 2.25 0 0 1-2.25-2.25v-7.75a2.25 2.25 0 0 1 2.25-2.25h.265Zm1.985-.25h3a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5Zm-1.987 1.73.002.02h-.265a.75.75 0 0 0-.75.75v7.75c0 .414.336.75.75.75h7.5a.75.75 0 0 0 .75-.75v-7.75a.75.75 0 0 0-.75-.75h-.265a2 2 0 0 1-1.985 1.75h-3a2 2 0 0 1-1.987-1.77Z\"></path></svg></span>\n                      </div>\n                    </div>\n                    </td>\n                </>\n              )}\n\n              {activeTab === 'srgba' && (\n                <>\n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>\n                    <div className=\"previewContainer\">\n                      <div className=\"preview light\" style={{ backgroundColor: tokenData.value }}></div>\n                      <div className=\"textColor light\" onClick={() => copyToClipboard(tokenData.value)}>\n                        {tokenData.value} <span><svg viewBox=\"0 0 20 20\" class=\"Icon_Icon__Dm3QW\" style={{width:'14px',height: '14px'}}><path fill-rule=\"evenodd\" d=\"M6.515 4.75a2 2 0 0 1 1.985-1.75h3a2 2 0 0 1 1.985 1.75h.265a2.25 2.25 0 0 1 2.25 2.25v7.75a2.25 2.25 0 0 1-2.25 2.25h-7.5a2.25 2.25 0 0 1-2.25-2.25v-7.75a2.25 2.25 0 0 1 2.25-2.25h.265Zm1.985-.25h3a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5Zm-1.987 1.73.002.02h-.265a.75.75 0 0 0-.75.75v7.75c0 .414.336.75.75.75h7.5a.75.75 0 0 0 .75-.75v-7.75a.75.75 0 0 0-.75-.75h-.265a2 2 0 0 1-1.985 1.75h-3a2 2 0 0 1-1.987-1.77Z\"></path></svg></span>\n                      </div>\n                    </div>\n                  </td>\n                  \n                  <td style={{ border: '1px solid #ddd', padding: '8px' }}>\n                    <div className=\"previewContainer\">\n                      <div className=\"preview dark\" style={{ backgroundColor: tokenData.darkValue }}></div>\n                      <div className=\"textColor dark\" onClick={() => copyToClipboard(tokenData.darkValue)}> \n                      {tokenData.darkValue}<span><svg viewBox=\"0 0 20 20\" class=\"Icon_Icon__Dm3QW\" style={{width:'14px',height: '14px'}}><path fill-rule=\"evenodd\" d=\"M6.515 4.75a2 2 0 0 1 1.985-1.75h3a2 2 0 0 1 1.985 1.75h.265a2.25 2.25 0 0 1 2.25 2.25v7.75a2.25 2.25 0 0 1-2.25 2.25h-7.5a2.25 2.25 0 0 1-2.25-2.25v-7.75a2.25 2.25 0 0 1 2.25-2.25h.265Zm1.985-.25h3a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5Zm-1.987 1.73.002.02h-.265a.75.75 0 0 0-.75.75v7.75c0 .414.336.75.75.75h7.5a.75.75 0 0 0 .75-.75v-7.75a.75.75 0 0 0-.75-.75h-.265a2 2 0 0 1-1.985 1.75h-3a2 2 0 0 1-1.987-1.77Z\"></path></svg></span>\n                      </div>\n                    </div>\n                    </td>\n                </>\n              )}\n\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\n\nexport default DesignTokensDisplay;"],"names":[],"sourceRoot":""}